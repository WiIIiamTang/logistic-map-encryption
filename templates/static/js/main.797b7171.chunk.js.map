{"version":3,"sources":["components/styles.js","components/ImageForm.js","App.js","index.js"],"names":["makeStyles","theme","muiVersion","background","marginTop","textAlign","padding","borderRadius","btn","color","fontSize","fontWeight","transition","boxShadow","transform","imageSection","height","display","justifyContent","alignItems","flexDirection","img","width","minWidth","minHeight","maxWidth","maxHeight","objectFit","nopic","link","ImageForm","api_base","classes","useStyles","useState","show","setShow","setImageFile","imageUrl","setImageUrl","imageId","setImageId","setCurrentlyUploading","useEffect","id","axios","get","then","response","console","log","data","url","catch","err","className","src","alt","href","target","rel","Button","onClick","open","onChange","file","onClose","onDelete","acceptedFiles","maxFileSize","filesLimit","showFileNamesInPreview","showFileNames","dropzoneText","getFileAddedMessage","getFileRemovedMessage","onAlert","alert","getFileLimitExceedMessage","getDropRejectMessage","size","onSave","fd","FormData","append","name","post","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.797b7171.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    muiVersion: {\r\n        background: 'linear-gradient(to bottom right, #ccc, #eee)',\r\n        marginTop: '4em',\r\n        textAlign: 'center',\r\n        padding: '1em',\r\n        borderRadius: '4px',\r\n      },\r\n      btn: {\r\n        background: '#333',\r\n        color: 'white',\r\n        fontSize: '2.4rem',\r\n        fontWeight: 'bold',\r\n        transition: 'all 0.3s ease',\r\n        padding: '1em 2.4em',\r\n        boxShadow: '0.2rem 0.2rem 0.2rem rgba(0, 0, 0, 0.466)',\r\n        '&:hover': {\r\n          background: '#111',\r\n          transform: 'translateY(-0.25rem)',\r\n          boxShadow: '0.45rem 0.45rem 0.45rem rgba(153, 153, 153, 0.651)',\r\n        },\r\n      },\r\n      imageSection: {\r\n        height: '20em',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      },\r\n      img: {\r\n        width: '25vw',\r\n        height: '25vw',\r\n        minWidth: '10em',\r\n        minHeight: '10em',\r\n        maxWidth: '20em',\r\n        maxHeight: '20em',\r\n        objectFit: 'contain',\r\n      },\r\n      nopic: { color: 'black' },\r\n      link: { color: 'black' },\r\n}));\r\n","import { useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport axios from 'axios';\r\nimport useStyles from './styles';\r\n\r\nconst ImageForm = () => {\r\n    const api_base = '/'\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [progress, setProgress] = useState(null);\r\n    const [imageId, setImageId] = useState(null);\r\n    const [currentlyUploading, setCurrentlyUploading] = useState(false);\r\n\r\n    const get_image_url = (id) => {\r\n        id &&\r\n        axios\r\n        .get(`${api_base}images/${id}`)\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setImageUrl(data.url);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleFile = ([file]) => file && setImageFile(file);\r\n    const handleDelete = () => setImageFile(null);\r\n    const handleSubmit = ([file]) => {\r\n        const fd = new FormData();\r\n        fd.append('file', file, file.name);\r\n        axios\r\n        .post(`${api_base}upimg`, fd)\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setImageId(data.id);\r\n            setImageFile(null);\r\n            setCurrentlyUploading(false);\r\n            setShow(false);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            alert(err);\r\n            setCurrentlyUploading(false);\r\n            setShow(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        get_image_url(imageId);\r\n    }, [imageId])\r\n\r\n    return (\r\n        <div className={classes.muiVersion}>\r\n        <div className={classes.imageSection}>\r\n            {imageId ? (\r\n            <>\r\n                <img\r\n                className={classes.img}\r\n                src={`${api_base}${imageUrl}`}\r\n                alt='material ui version preview'\r\n                />\r\n                <a\r\n                className={classes.link}\r\n                href={`${api_base}${imageUrl}`}\r\n                target='_blank' rel=\"noreferrer\"\r\n                >\r\n                link\r\n                </a>\r\n            </>\r\n            ) : (\r\n            <p className={classes.nopic}>no mui version pic yet</p>\r\n            )}\r\n        </div>\r\n        <Button className={classes.btn} onClick={() => setShow(true)}>\r\n            mui version\r\n        </Button>\r\n        <DropzoneDialog\r\n            open={show}\r\n            onChange={handleFile}\r\n            onClose={() => setShow(false)}\r\n            onDelete={handleDelete}\r\n            acceptedFiles={['image/png']}\r\n            maxFileSize={5000000}\r\n            filesLimit={1}\r\n            showFileNamesInPreview={false}\r\n            showFileNames={false}\r\n            dropzoneText={'Drop it here'}\r\n            getFileAddedMessage={() => 'file added!'}\r\n            getFileRemovedMessage={() => 'file removed!'}\r\n            onAlert={(alert) => console.log({ alert })}\r\n            getFileLimitExceedMessage={() => 'file is too big'}\r\n            getDropRejectMessage={(file) => {\r\n            if (file.size > 5000000) return 'file is too big';\r\n            else return 'invalid file type';\r\n            }}\r\n            onSave={handleSubmit}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageForm;\r\n","import ImageForm from './components/ImageForm';\n\nconst App = () => {\n  return (\n    <div>\n      <h2>Math 326</h2>\n      <ImageForm/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}