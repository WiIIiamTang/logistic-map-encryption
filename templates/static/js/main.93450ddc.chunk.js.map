{"version":3,"sources":["components/EncryptDecryptOptions/styles.js","components/EncryptDecryptOptions/EncryptDecryptOptions.js","components/ImageForm/styles.js","components/ImageForm/ImageForm.js","components/OutputMenu/styles.js","components/OutputMenu/OutputMenu.js","components/EncryptDecryptMenu/styles.js","components/EncryptDecryptMenu/EncryptDecryptMenu.js","App.js","index.js"],"names":["makeStyles","theme","options","display","flexDirection","rowGap","width","padding","EncryptDecryptOptions","setWaiting","setModel","model","api_base","uploadedKey","setOutImg","setGeneratedKey","setUploadedKey","classes","useStyles","useState","setKey","handleEncryptTryAgain","tries","axios","get","params","then","response","console","log","data","url","key","catch","err","alert","handleDecryptTryAgain","fd","FormData","append","post","className","FormControl","fullWidth","InputLabel","id","Select","labelId","value","onChange","e","target","MenuItem","Button","variant","color","size","onClick","TextField","label","input","muiVersion","background","marginTop","textAlign","borderRadius","height","btn","fontSize","fontWeight","transition","boxShadow","transform","imageSection","justifyContent","alignItems","img","minWidth","minHeight","maxWidth","maxHeight","objectFit","nopic","link","ImageForm","show","setShow","setImageFile","imageUrl","setImageUrl","imageId","setImageId","src","alt","href","rel","open","file","onClose","onDelete","acceptedFiles","maxFileSize","filesLimit","showFileNamesInPreview","showFileNames","dropzoneText","getFileAddedMessage","getFileRemovedMessage","onAlert","getFileLimitExceedMessage","getDropRejectMessage","onSave","name","OutputMenu","waiting","outImg","generatedKey","CircularProgress","readOnly","multiline","maxRows","mainMenu","EncryptDecryptMenu","App","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93450ddc.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    options: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        rowGap: '20px',\r\n        width: '400px',\r\n        padding: '0 10px'\r\n      }\r\n}));\r\n","import { Button, FormControl, InputLabel, MenuItem, Select, TextField } from \"@material-ui/core\"\r\nimport useStyles from './styles';\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst EncryptDecryptOptions = ({ setWaiting, setModel, model, api_base, uploadedKey, setOutImg, setGeneratedKey, setUploadedKey }) => {\r\n    const classes = useStyles();\r\n    const [key, setKey] = useState(null);\r\n    const maxTries = 20;\r\n\r\n    const handleEncryptTryAgain = (tries) => {\r\n        if (tries===0) {\r\n            alert('Encrypting failed. Try refreshing the page.');\r\n            return;\r\n        }\r\n\r\n        setWaiting(true);\r\n        axios\r\n        .get(`${api_base}/encrypt`, {\r\n            params: {\r\n                model: model\r\n            }\r\n        })\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setOutImg(data.url);\r\n            setGeneratedKey(data.key);\r\n            setWaiting(false);\r\n        })\r\n        .catch((err) => {\r\n            handleEncryptTryAgain(tries-1);\r\n        })\r\n    }\r\n\r\n    const handleEncrypt = () => {\r\n        setWaiting(true);\r\n        axios\r\n        .get(`${api_base}/encrypt`, {\r\n            params: {\r\n                model: model\r\n            }\r\n        })\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setOutImg(data.url);\r\n            setGeneratedKey(data.key);\r\n            setWaiting(false);\r\n        })\r\n        .catch((err) => {\r\n            handleEncryptTryAgain(maxTries);\r\n        })\r\n    };\r\n\r\n    const handleDecryptTryAgain = (tries) => {\r\n        if (tries===0) {\r\n            alert('Error Decrypting. Try refreshing');\r\n            return;\r\n        }\r\n\r\n        setWaiting(true);\r\n        const fd = new FormData();\r\n        fd.append('model', model);\r\n        fd.append('keystring', uploadedKey);\r\n        axios\r\n        .post(`${api_base}/decrypt`, fd)\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setOutImg(data.url);\r\n            setWaiting(false);\r\n            setGeneratedKey('');\r\n        })\r\n        .catch((err) => {\r\n            handleDecryptTryAgain(tries-1)\r\n        });\r\n    }\r\n\r\n    const handleDecrypt = () => {\r\n        setWaiting(true);\r\n        const fd = new FormData();\r\n        fd.append('model', model);\r\n        fd.append('keystring', uploadedKey);\r\n        axios\r\n        .post(`${api_base}/decrypt`, fd)\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setOutImg(data.url);\r\n            setWaiting(false);\r\n            setGeneratedKey('')\r\n        })\r\n        .catch((err) => {\r\n            handleDecryptTryAgain(maxTries);\r\n        });\r\n    }\r\n\r\n    const handleInput = (input) => {\r\n        setUploadedKey(input);\r\n        setKey(input);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.options}>\r\n            <FormControl fullWidth>\r\n                <InputLabel id=\"input-label\">Model</InputLabel>\r\n                <Select\r\n                    labelId=\"input-label\"\r\n                    id=\"input\"\r\n                    value={model}\r\n                    onChange={e => { setModel(e.target.value)}}\r\n\r\n                >\r\n                    <MenuItem value={'SimpleStream'}>SimpleStream</MenuItem>\r\n                    <MenuItem value={'LogisticMapStream'}>LogisticMapStream</MenuItem>\r\n                    <MenuItem value={'HenonMapStream'}>HenonMapStream</MenuItem>\r\n                    <MenuItem value={'LogisticMapPixel'}>LogisticMapPixel</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={handleEncrypt}\r\n            >Encrypt</Button>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                onClick={handleDecrypt}\r\n            >Decrypt</Button>\r\n\r\n\r\n\r\n            <TextField\r\n                fullWidth\r\n                label={'Paste the keystring if decrypting'}\r\n                variant='outlined'\r\n                onChange={(e) => handleInput(e.target.value)}\r\n            />\r\n\r\n            {/* {key && (<div>{key}</div>)} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EncryptDecryptOptions\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    muiVersion: {\r\n        background: \"linear-gradient(to bottom right, #ccc, #eee)\",\r\n        marginTop: \"4em\",\r\n        textAlign: \"center\",\r\n        padding: \"1em\",\r\n        borderRadius: \"4px\",\r\n        height: \"35vw\",\r\n        width: \"35vw\",\r\n    },\r\n    btn: {\r\n        background: \"#333\",\r\n        color: \"white\",\r\n        fontSize: \"2.4rem\",\r\n        fontWeight: \"bold\",\r\n        transition: \"all 0.3s ease\",\r\n        padding: \"1em 2.4em\",\r\n        boxShadow: \"0.2rem 0.2rem 0.2rem rgba(0, 0, 0, 0.466)\",\r\n        \"&:hover\": {\r\n            background: \"#111\",\r\n            transform: \"translateY(-0.25rem)\",\r\n            boxShadow: \"0.45rem 0.45rem 0.45rem rgba(153, 153, 153, 0.651)\",\r\n        },\r\n    },\r\n    imageSection: {\r\n        height: \"20em\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n    },\r\n    img: {\r\n        width: \"25vw\",\r\n        height: \"25vw\",\r\n        minWidth: \"10em\",\r\n        minHeight: \"10em\",\r\n        maxWidth: \"20em\",\r\n        maxHeight: \"20em\",\r\n        objectFit: \"contain\",\r\n    },\r\n    nopic: { color: \"black\" },\r\n    link: { color: \"black\" },\r\n}));\r\n","import { useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport axios from 'axios';\r\nimport useStyles from './styles';\r\n\r\nconst ImageForm = ({api_base}) => {\r\n    \r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    //const [progress, setProgress] = useState(null);\r\n    const [imageId, setImageId] = useState(0);\r\n    //const [currentlyUploading, setCurrentlyUploading] = useState(false);\r\n\r\n    const get_image_url = (id) => {\r\n        console.log('GET IMAGE URL');\r\n        id &&\r\n        axios\r\n        .get(`${api_base}/images/${id}`)\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setImageUrl(data.url);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleFile = ([file]) => file && setImageFile(file);\r\n    const handleDelete = () => setImageFile(null);\r\n    const handleSubmit = ([file]) => {\r\n        const fd = new FormData();\r\n        fd.append('file', file, file.name);\r\n        axios\r\n        .post(`${api_base}/upimg`, fd)\r\n        .then((response) => {\r\n            console.log(response);\r\n            const data = response.data;\r\n            setImageId(data.id);\r\n            setImageUrl(data.url);\r\n            setImageFile(null);\r\n            //setCurrentlyUploading(false);\r\n            setShow(false);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            alert(err);\r\n            //setCurrentlyUploading(false);\r\n            setShow(false);\r\n        });\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     get_image_url(imageId);\r\n    // }, [imageId])\r\n\r\n    return (\r\n        <div className={classes.muiVersion}>\r\n        <h2>Input</h2>\r\n        <div className={classes.imageSection}>\r\n            {imageId ? (\r\n            <>\r\n                <img\r\n                className={classes.img}\r\n                src={`${api_base}${imageUrl}`}\r\n                alt='material ui version preview'\r\n                />\r\n                <a\r\n                className={classes.link}\r\n                href={`${api_base}${imageUrl}`}\r\n                target='_blank' rel=\"noreferrer\"\r\n                >\r\n                link\r\n                </a>\r\n            </>\r\n            ) : (\r\n            <p className={classes.nopic}>no image uploaded yet</p>\r\n            )}\r\n        </div>\r\n        <Button className={classes.btn} onClick={() => setShow(true)}>\r\n            upload image\r\n        </Button>\r\n        <DropzoneDialog\r\n            open={show}\r\n            onChange={handleFile}\r\n            onClose={() => setShow(false)}\r\n            onDelete={handleDelete}\r\n            acceptedFiles={['image/png']}\r\n            maxFileSize={5000000}\r\n            filesLimit={1}\r\n            showFileNamesInPreview={false}\r\n            showFileNames={false}\r\n            dropzoneText={'Drop it here'}\r\n            getFileAddedMessage={() => 'file added!'}\r\n            getFileRemovedMessage={() => 'file removed!'}\r\n            onAlert={(alert) => console.log({ alert })}\r\n            getFileLimitExceedMessage={() => 'file is too big'}\r\n            getDropRejectMessage={(file) => {\r\n            if (file.size > 5000000) return 'file is too big';\r\n            else return 'invalid file type';\r\n            }}\r\n            onSave={handleSubmit}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    muiVersion: {\r\n        background: 'linear-gradient(to bottom right, #ccc, #eee)',\r\n        marginTop: '4em',\r\n        textAlign: 'center',\r\n        padding: '1em',\r\n        borderRadius: '4px',\r\n        height: '35vw',\r\n        width: '35vw'\r\n      },\r\n      btn: {\r\n        background: '#333',\r\n        color: 'white',\r\n        fontSize: '2.4rem',\r\n        fontWeight: 'bold',\r\n        transition: 'all 0.3s ease',\r\n        padding: '1em 2.4em',\r\n        boxShadow: '0.2rem 0.2rem 0.2rem rgba(0, 0, 0, 0.466)',\r\n        '&:hover': {\r\n          background: '#111',\r\n          transform: 'translateY(-0.25rem)',\r\n          boxShadow: '0.45rem 0.45rem 0.45rem rgba(153, 153, 153, 0.651)',\r\n        },\r\n      },\r\n      imageSection: {\r\n        height: '20em',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      },\r\n      img: {\r\n        width: '25vw',\r\n        height: '25vw',\r\n        minWidth: '10em',\r\n        minHeight: '10em',\r\n        maxWidth: '20em',\r\n        maxHeight: '20em',\r\n        objectFit: 'contain',\r\n      },\r\n      nopic: { color: 'black' },\r\n      link: { color: 'black' },\r\n}));\r\n","import { useState, useEffect } from \"react\";\r\nimport { Button, CircularProgress, TextField } from \"@material-ui/core\";\r\nimport { DropzoneDialog } from \"material-ui-dropzone\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst OutputMenu = ({ waiting, api_base, outImg, generatedKey }) => {\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(false);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [progress, setProgress] = useState(null);\r\n    const [imageId, setImageId] = useState(0);\r\n    const [currentlyUploading, setCurrentlyUploading] = useState(false);\r\n    \r\n\r\n\r\n    const get_image_url = (id) => {\r\n        console.log(\"GET IMAGE URL\");\r\n        id &&\r\n            axios\r\n                .get(`${api_base}/images/${id}`)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    const data = response.data;\r\n                    setImageUrl(data.url);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n    };\r\n\r\n    const handleFile = ([file]) => file && setImageFile(file);\r\n    const handleDelete = () => setImageFile(null);\r\n    const handleSubmit = ([file]) => {\r\n        const fd = new FormData();\r\n        fd.append(\"file\", file, file.name);\r\n        axios\r\n            .post(`${api_base}upimg`, fd)\r\n            .then((response) => {\r\n                console.log(response);\r\n                const data = response.data;\r\n                setImageId(data.id);\r\n                setImageUrl(data.url);\r\n                setImageFile(null);\r\n                setCurrentlyUploading(false);\r\n                setShow(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(err);\r\n                setCurrentlyUploading(false);\r\n                setShow(false);\r\n            });\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     get_image_url(imageId);\r\n    // }, [imageId])\r\n\r\n    // const downloadKey = () => {\r\n    //     window.location.href = `${api_base}${generatedKey}`;\r\n    // };\r\n\r\n    return (\r\n        <div className={classes.muiVersion}>\r\n            <h2>Output</h2>\r\n            <div className={classes.imageSection}>\r\n                {waiting && \r\n                    <>\r\n                        <CircularProgress/>\r\n                    </>}\r\n                {outImg ? (\r\n                    <>\r\n                        <img\r\n                            className={classes.img}\r\n                            src={`${api_base}${outImg}`}\r\n                            alt=\"material ui version preview\"\r\n                        />\r\n                        <a\r\n                            className={classes.link}\r\n                            href={`${api_base}${outImg}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                        >\r\n                            link\r\n                        </a>\r\n                    </>\r\n                ) : (\r\n                    <p className={classes.nopic}>no image generated</p>\r\n                )}\r\n\r\n\r\n            </div>\r\n            <div>\r\n                {generatedKey ? (\r\n                    \r\n                    <div>\r\n                        <TextField\r\n                            fullWidth\r\n                            readOnly\r\n                            multiline\r\n                            maxRows={5}\r\n                            value={generatedKey}\r\n                            label='key'\r\n                        />\r\n                    </div>\r\n\r\n                    \r\n\r\n                ): 'no key yet'}\r\n            </div>\r\n            {/* <Button variant=\"contained\" onClick={downloadKey}>\r\n                Download generated key\r\n            </Button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OutputMenu;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainMenu: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n}));\r\n","import EncryptDecryptOptions from \"../EncryptDecryptOptions/EncryptDecryptOptions\";\r\nimport ImageForm from \"../ImageForm/ImageForm\";\r\nimport OutputMenu from \"../OutputMenu/OutputMenu\";\r\nimport useStyles from './styles';\r\nimport { useState } from 'react';\r\n\r\nconst EncryptDecryptMenu = () => {\r\n    const classes = useStyles();\r\n    const [outImg, setOutImg] = useState(null);\r\n    const [generatedKey, setGeneratedKey] = useState(null);\r\n    const [uploadedKey, setUploadedKey] = useState('');\r\n    const [model, setModel] = useState('SimpleStream');\r\n    const [waiting, setWaiting] = useState(false);\r\n\r\n    const api_base = 'http://127.0.0.1:5000';\r\n\r\n    return (\r\n        <div className={classes.mainMenu}>\r\n            <ImageForm api_base={api_base}/>\r\n            \r\n            <EncryptDecryptOptions setWaiting={setWaiting} setModel={setModel} model={model} api_base={api_base} uploadedKey={uploadedKey} setOutImg={setOutImg} setGeneratedKey={setGeneratedKey} setUploadedKey={setUploadedKey}/>\r\n            \r\n            <OutputMenu waiting={waiting} api_base={api_base} outImg={outImg} generatedKey={generatedKey}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EncryptDecryptMenu\r\n","import EncryptDecryptMenu from './components/EncryptDecryptMenu/EncryptDecryptMenu';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Image Encryption with chaotic maps</h1>\n      <p>This tool demonstrates various methods of image encryption using a discrete chaotic map.\n      For more information, consult the <a href=\"https://github.com/WiIIiamTang/logistic-map-encryption\" target=\"_blank\" rel=\"noreferrer\">\n      Github repository</a> for this project.</p>\n\n      <h2>Encryption details</h2>\n      <p>You must upload a PNG image in the Input section. Please do not upload anything too large. The preferred size would be 100x100, such as the example below </p>\n      <img src={\"https://www.iconspng.com/uploads/light-dino-avatar-icon/light-dino-avatar-icon.png\"} alt=\"dino\"/>\n\n      <p>To decrypt, uploaded the encrypted file into Input. Then paste the key into the correct place and press decrypt.</p>\n\n      <h2>SimpleStream</h2>\n      <p>An XOR cipher, where the key is a randomly generated sequence of integers between 0 and 255 from a uniform distribution.</p>\n      \n\n      <h2>LogisticMapStream</h2>\n      <p>An XOR cipher, where the key is a randomly generated sequence of integers between 0 and 255 from the logistic map.</p>\n\n      <h2>HenonMapStream</h2>\n      <p>A method involving three XOR ciphers. Keys are created by generating integers between 0 and 255 from the Hénon Map.</p>\n\n      <h2>LogisticMapPixel</h2>\n      <p>A method that iterates each pixel of the image with the logistic map. The initial condition of the logistic map is the pixel's value (a number between 0 and 1).</p>\n\n\n      <EncryptDecryptMenu/>\n\n\n      <p style={{fontSize: '0.85rem', textAlign: 'center', color: \"gray\"}}>\n        MATH 326 - McGill University\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}